name: Terraform Plan (Dev)

on:
  push:
    branches:
      - main

permissions:  # ðŸ‘ˆ ADD THIS BLOCK
  id-token: write   # Required for GitHub to request the OIDC token
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.4"

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::354918385395:role/GitHubActionsOIDCRole
          aws-region:            us-east-1

      - name: Create terraform.tfvars file  # To use values in .tfvars
        working-directory: infrastructure
        run: |
          echo 'allowed_ips = ["${{ secrets.ALLOWED_IPS }}"]' > terraform.tfvars
          echo 'db_password = "${{ secrets.DB_PASSWORD }}"' >> terraform.tfvars
          echo 'ami_id = "${{ secrets.AMI_ID }}"' >> terraform.tfvars
          echo 'key_name = "${{ secrets.KEY_NAME }}"' >> terraform.tfvars
          echo 'region = "${{ secrets.REGION }}"' >> terraform.tfvars
          echo 'instance_type = "${{ secrets.INSTANCE_TYPE }}"' >> terraform.tfvars
          echo 'db_name = "${{ secrets.DB_NAME }}"' >> terraform.tfvars
          echo 'vpc_id = "${{ secrets.VPC_ID }}"' >> terraform.tfvars

      - name: Terraform Init
        working-directory: infrastructure
        run: terraform init

      - name: Terraform Plan
        working-directory: infrastructure
        run: |
          terraform plan \
            -input=false \
            -var-file="terraform.tfvars" \
            -out=tfplan
